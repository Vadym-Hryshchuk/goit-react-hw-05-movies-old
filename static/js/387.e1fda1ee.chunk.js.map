{"version":3,"file":"static/js/387.e1fda1ee.chunk.js","mappings":"sOAEaA,E,MAAcC,GAAAA,GAAH,6R,SCGT,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACmBN,GAChBO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,QACnC,CAACR,KAEF,8BACGG,EAAQM,OAAS,GAChB,SAACZ,EAAD,UACGM,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,SAOb,yE,oLC1BFG,EAAU,mCACVC,EAAW,+BAAjB,SAEeT,EAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BU,GAA1B,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,0GAOO,SAASC,IACd,OAAOlB,EAAW,GAAD,OAAIS,EAAJ,wCAA4CD,IAGxD,SAASW,EAAaC,EAAOC,GAClC,OAAOrB,EAAW,GAAD,OACZS,EADY,iCACqBD,EADrB,iCACqDY,EADrD,iBACmEC,EADnE,yBAKZ,SAASC,EAAgBjB,GAC9B,OAAOL,EAAW,GAAD,OACZS,EADY,kBACMJ,EADN,oBACoBG,EADpB,oBAKZ,SAASe,EAAgBlB,GAC9B,OAAOL,EAAW,GAAD,OACZS,EADY,kBACMJ,EADN,4BAC4BG,EAD5B,oBAKZ,SAASgB,EAAgBnB,GAAe,IAAXgB,EAAU,uDAAH,EACzC,OAAOrB,EAAW,GAAD,OACZS,EADY,kBACMJ,EADN,4BAC4BG,EAD5B,gCAC2Da","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetchMovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin: 0;\n  padding: 10px;\n  list-style: none;\n  background-color: rgba(128, 128, 128, 0.1);\n\n  h2 {\n    margin: 0;\n    padding: 0;\n    text-transform: capitalize;\n  }\n\n  p {\n    margin: 0 0 15px;\n    padding: 0;\n    text-align: justify;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as fetchMovie from '../../services/fetchMovieAPI';\nimport { ReviewsList } from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovie\n      .getMovieReviews(movieId)\n      .then(({ results }) => setReviews(results));\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>We don't have any reviews for this movie!</p>\n      )}\n    </>\n  );\n}\n","const API_KEY = 'a8667995004f1618098a3acfcfde7ac0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovie(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function getTrendingMovie() {\n  return fetchMovie(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n}\n\nexport function searchMovies(query, page) {\n  return fetchMovie(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n  );\n}\n\nexport function getMovieDetails(id) {\n  return fetchMovie(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function getMovieCredits(id) {\n  return fetchMovie(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n\nexport function getMovieReviews(id, page = 1) {\n  return fetchMovie(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`,\n  );\n}\n"],"names":["ReviewsList","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovie","then","results","length","map","id","author","content","API_KEY","BASE_URL","url","fetch","response","ok","json","Promise","reject","Error","getTrendingMovie","searchMovies","query","page","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}